# name: deploy

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - run: echo "API_ADDRESS"=$API_ADDRESS > .env.production
#         env:
#           API_ADDRESS: ${{ secrets.API_ADDRESS }}
#       - run: echo "NEXT_PUBLIC_API_ADDRESS"=$NEXT_PUBLIC_API_ADDRESS >> .env.production
#         env:
#           NEXT_PUBLIC_API_ADDRESS: ${{ secrets.NEXT_PUBLIC_API_ADDRESS }}
#       - run: echo "NEXT_PUBLIC_GOOGLE_CLIENT_ID"=$NEXT_PUBLIC_GOOGLE_CLIENT_ID >> .env.production
#         env:
#           NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
#       - run: echo "NEXT_PUBLIC_FACEBOOK_APP_ID"=$NEXT_PUBLIC_FACEBOOK_APP_ID >> .env.production
#         env:
#           NEXT_PUBLIC_FACEBOOK_APP_ID: ${{ secrets.NEXT_PUBLIC_FACEBOOK_APP_ID }}
#       - run: echo "NEXT_PUBLIC_TINY_API_KEY"=$NEXT_PUBLIC_TINY_API_KEY >> .env.production
#         env:
#           NEXT_PUBLIC_TINY_API_KEY: ${{ secrets.NEXT_PUBLIC_TINY_API_KEY }}
#       - run: echo "MONGO_URI"=$MONGO_URI >> .env.production
#         env:
#           MONGO_URI: ${{ secrets.MONGO_URI }}
#       - run: echo "JWT_SECRET"=$JWT_SECRET >> .env.production
#         env:
#           JWT_SECRET: ${{ secrets.JWT_SECRET }}
#       - run: echo "GOOGLE_CLIENT_ID"=$GOOGLE_CLIENT_ID >> .env.production
#         env:
#           GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
#       - run: echo "PORT"=$PORT >> .env.production
#         env:
#           PORT: ${{ secrets.PORT }}
#       - run: echo "CLOUDINARY_CLOUD_NAME"=$CLOUDINARY_CLOUD_NAME >> .env.production
#         env:
#           PORT: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
#       - run: echo "CLOUDINARY_API_KEY"=$CLOUDINARY_API_KEY >> .env.production
#         env:
#           PORT: ${{ secrets.CLOUDINARY_API_KEY }}
#       - run: echo "CLOUDINARY_API_SECRET"=$CLOUDINARY_API_SECRET >> .env.production
#         env:
#           PORT: ${{ secrets.CLOUDINARY_API_SECRET }}
#       - run: docker build --tag $REPO --target prod .
#         env:
#           REPO: ${{ secrets.REPO }}
#       - name: Push to ECR
#         id: ecr
#         uses: jwalton/gh-ecr-push@v1
#         with:
#           access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           region: ap-southeast-1
#           image: ${{ secrets.REPO }}
#   deploy:
#     needs: build
#     runs-on: self-hosted
#     steps:
#       - uses: actions/checkout@v2
#       - run: aws configure set region $REGION
#         env:
#           REGION: ${{ secrets.REGION }}
#       - run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       - run: aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
#         env:
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       - run: aws ecr get-login-password --region $REGION | sudo docker login --username AWS --password-stdin $ECR_URI
#         env:
#           REGION: ${{ secrets.REGION }}
#           ECR_URI: ${{ secrets.ECR_URI }}
#       - run: sudo docker pull $ECR_URI
#         env:
#           ECR_URI: ${{ secrets.ECR_URI }}
#       - run: sudo bash ./killdocker.sh
#       - run: sudo docker run -p 80:3000 -d $ECR_URI
#         env:
#           ECR_URI: ${{ secrets.ECR_URI }}
