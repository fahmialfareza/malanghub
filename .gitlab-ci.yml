# We have 1 Deploy
stages:
  - deploy

# Config cache
cache:
  paths:
    - node_modules/

# Deploy job
deploy:
  type: deploy
  # Attach Deploy job to Deploy stage
  stage: deploy
  # Config to use our Runner with Executor Shell
  tags:
    - malanghub
  script:
    # Only copy changed files to project folder
    - cp -r -u * $PROJECT_DIR
    - echo "API_ADDRESS"=$API_ADDRESS > .env.production
    - echo "NEXT_PUBLIC_API_ADDRESS"=$NEXT_PUBLIC_API_ADDRESS >> .env.production
    - echo "NEXT_PUBLIC_GOOGLE_CLIENT_ID"=$NEXT_PUBLIC_GOOGLE_CLIENT_ID >> .env.production
    - echo "NEXT_PUBLIC_FACEBOOK_APP_ID"=$NEXT_PUBLIC_FACEBOOK_APP_ID >> .env.production
    - echo "NEXT_PUBLIC_TINY_API_KEY"=$NEXT_PUBLIC_TINY_API_KEY >> .env.production
    - echo "MONGO_URI"=$MONGO_URI >> .env.production
    - echo "JWT_SECRET"=$JWT_SECRET >> .env.production
    - echo "AWS_S3_BUCKET"=$AWS_S3_BUCKET >> .env.production
    - echo "AWS_S3_ACCESS_KEY"=$AWS_S3_ACCESS_KEY >> .env.production
    - echo "AWS_S3_SECRET_KEY"=$AWS_S3_SECRET_KEY >> .env.production
    - echo "AWS_S3_FILE_URL"=$AWS_S3_FILE_URL >> .env.production
    - echo "GOOGLE_CLIENT_ID"=$GOOGLE_CLIENT_ID >> .env.production
    - echo "PORT"=$PORT >> .env.production
    - cd $PROJECT_DIR
    - yarn install --production=true && yarn cache clean --force
    - yarn build
    # sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3000
    # Restart NodeJS service
    - yarn run stop || true
    - yarn run start
  only:
    - main
